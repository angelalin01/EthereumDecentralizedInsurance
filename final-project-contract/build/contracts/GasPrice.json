{
  "contractName": "GasPrice",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "gasPriceUSD",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "price",
          "type": "string"
        }
      ],
      "name": "LogNewGasPrice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "description",
          "type": "string"
        }
      ],
      "name": "LogNewProvableQuery",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        },
        {
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "update",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "resetToZero",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"},{\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"update\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"resetToZero\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gasPriceUSD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"price\",\"type\":\"string\"}],\"name\":\"LogNewGasPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"description\",\"type\":\"string\"}],\"name\":\"LogNewProvableQuery\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/wesleypenn/Documents/2019-2020/CIS233/final-project/final-project-contract/contracts/GasPrice.sol\":\"GasPrice\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/wesleypenn/Documents/2019-2020/CIS233/final-project/final-project-contract/contracts/GasPrice.sol\":{\"keccak256\":\"0x138375cd66445fe28fd3d727c64c2c2643c036ad074d925c44895d4bc7a8742a\",\"urls\":[\"bzzr://9832e79ef71c587fb201b2852bb38f3364201d74023a847889e0a6955aa56e6e\"]},\"/Users/wesleypenn/Documents/2019-2020/CIS233/final-project/final-project-contract/contracts/provableAPI.sol\":{\"keccak256\":\"0x599540b4da2f005e736061a25f83b8effa219b94be0d55a7629cbe29c2710fc9\",\"urls\":[\"bzzr://a3aa925a1c23d31b29abbb5b507d04c108e0b704e74be3eb04cd42d46b8befe1\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50620000226200002860201b60201c565b62000d05565b7fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c4738960405180806020018281038252602e815260200180620021ee602e913960400191505060405180910390a1620000d46040518060400160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506040518060800160405280604681526020016200221c60469139620000d760201b60201c565b50565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480620001685750600062000166600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166200064760201b60201c565b145b1562000182576200018060006200065260201b60201c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015620001ed57600080fd5b505af115801562000202573d6000803e3d6000fd5b505050506040513d60208110156200021957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146200036657600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015620002e957600080fd5b505af1158015620002fe573d6000803e3d6000fd5b505050506040513d60208110156200031557600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015620003f7578082015181840152602081019050620003da565b50505050905090810190601f168015620004255780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1580156200044557600080fd5b505af11580156200045a573d6000803e3d6000fd5b505050506040513d60208110156200047157600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a764000001811115620004a9576000801b91505062000641565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff1660e01b8152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156200054657808201518184015260208101905062000529565b50505050905090810190601f168015620005745780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015620005af57808201518184015260208101905062000592565b50505050905090810190601f168015620005dd5780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b158015620005ff57600080fd5b505af115801562000614573d6000803e3d6000fd5b50505050506040513d60208110156200062c57600080fd5b81019080805190602001909291905050509150505b92915050565b6000813b9050919050565b6000620006646200066b60201b60201c565b9050919050565b60008062000693731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6200064760201b60201c565b11156200073f57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620007356040518060400160405280600b81526020017f6574685f6d61696e6e657400000000000000000000000000000000000000000081525062000c3a60201b60201c565b6001905062000c37565b60006200076673c03a2615d5efaf5f49f60b7bb6583eaec212fdf16200064760201b60201c565b1115620008125773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620008086040518060400160405280600c81526020017f6574685f726f707374656e33000000000000000000000000000000000000000081525062000c3a60201b60201c565b6001905062000c37565b60006200083973b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6200064760201b60201c565b1115620008e55773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620008db6040518060400160405280600981526020017f6574685f6b6f76616e000000000000000000000000000000000000000000000081525062000c3a60201b60201c565b6001905062000c37565b60006200090c73146500cfd35b22e4a392fe0adc06de1a1368ed486200064760201b60201c565b1115620009b85773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620009ae6040518060400160405280600b81526020017f6574685f72696e6b65627900000000000000000000000000000000000000000081525062000c3a60201b60201c565b6001905062000c37565b6000620009df73a2998efd205fb9d4b4963afb70778d6354ad3a416200064760201b60201c565b111562000a8b5773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000a816040518060400160405280600a81526020017f6574685f676f65726c690000000000000000000000000000000000000000000081525062000c3a60201b60201c565b6001905062000c37565b600062000ab2736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756200064760201b60201c565b111562000b1857736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062000c37565b600062000b3f7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6200064760201b60201c565b111562000ba5577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062000c37565b600062000bcc7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6200064760201b60201c565b111562000c32577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062000c37565b600090505b90565b806002908051906020019062000c5292919062000c56565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062000c9957805160ff191683800117855562000cca565b8280016001018555821562000cca579182015b8281111562000cc957825182559160200191906001019062000cac565b5b50905062000cd9919062000cdd565b5090565b62000d0291905b8082111562000cfe57600081600090555060010162000ce4565b5090565b90565b6114d98062000d156000396000f3fe60806040526004361061004a5760003560e01c806327dc297e1461004f57806338bbfa5014610121578063a2e620451461028a578063a37ac1e814610294578063be46e4251461029e575b600080fd5b34801561005b57600080fd5b5061011f6004803603604081101561007257600080fd5b81019080803590602001909291908035906020019064010000000081111561009957600080fd5b8201836020820111156100ab57600080fd5b803590602001918460018302840111640100000000831117156100cd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506102c9565b005b34801561012d57600080fd5b506102886004803603606081101561014457600080fd5b81019080803590602001909291908035906020019064010000000081111561016b57600080fd5b82018360208201111561017d57600080fd5b8035906020019184600183028401116401000000008311171561019f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561020257600080fd5b82018360208201111561021457600080fd5b8035906020019184600183028401116401000000008311171561023657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506103b9565b005b6102926103dc565b005b61029c610481565b005b3480156102aa57600080fd5b506102b361048b565b6040518082815260200191505060405180910390f35b6102d1610491565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461030857600080fd5b7f287a7e574923995170e64f00e73f071c03b592d2f2cd69b0d7b706fb3b1699c6816040518080602001828103825283818151815260200191508051906020019080838360005b8381101561036a57808201518184015260208101905061034f565b50505050905090810190601f1680156103975780820380516001836020036101000a031916815260200191505b509250505060405180910390a16103af8160026107ae565b6005819055505050565b6000801b600360008060001b815260200190815260200160002081905550505050565b7fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c4738960405180806020018281038252602e81526020018061143a602e913960400191505060405180910390a161047e6040518060400160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250604051806080016040528060468152602001611468604691396108c1565b50565b6000600581905550565b60055481565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061051957506000610517600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610e07565b145b1561052a576105286000610e12565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561059457600080fd5b505af11580156105a8573d6000803e3d6000fd5b505050506040513d60208110156105be57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461070757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561068c57600080fd5b505af11580156106a0573d6000803e3d6000fd5b505050506040513d60208110156106b657600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561076e57600080fd5b505afa158015610782573d6000803e3d6000fd5b505050506040513d602081101561079857600080fd5b8101908080519060200190929190505050905090565b600060608390506000809050600080905060008090505b83518110156108a25760308482815181106107dc57fe5b602001015160f81c60f81b60f81c60ff16101580156108185750603984828151811061080457fe5b602001015160f81c60f81b60f81c60ff1611155b1561086a57811561083b576000861415610831576108a2565b8580600190039650505b600a83029250603084828151811061084f57fe5b602001015160f81c60f81b60f81c60ff160383019250610895565b602e84828151811061087857fe5b602001015160f81c60f81b60f81c60ff16141561089457600191505b5b80806001019150506107c5565b5060008511156108b55784600a0a820291505b81935050505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061094957506000610947600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610e07565b145b1561095a576109586000610e12565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156109c457600080fd5b505af11580156109d8573d6000803e3d6000fd5b505050506040513d60208110156109ee57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b3757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610abc57600080fd5b505af1158015610ad0573d6000803e3d6000fd5b505050506040513d6020811015610ae657600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610bc6578082015181840152602081019050610bab565b50505050905090810190601f168015610bf35780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610c1257600080fd5b505af1158015610c26573d6000803e3d6000fd5b505050506040513d6020811015610c3c57600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a764000001811115610c72576000801b915050610e01565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff1660e01b8152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610d0d578082015181840152602081019050610cf2565b50505050905090810190601f168015610d3a5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610d73578082015181840152602081019050610d58565b50505050905090810190601f168015610da05780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b158015610dc157600080fd5b505af1158015610dd5573d6000803e3d6000fd5b50505050506040513d6020811015610dec57600080fd5b81019080805190602001909291905050509150505b92915050565b6000813b9050919050565b6000610e1c610e23565b9050919050565b600080610e43731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610e07565b1115610ee557731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610edc6040518060400160405280600b81526020017f6574685f6d61696e6e657400000000000000000000000000000000000000000081525061137a565b60019050611377565b6000610f0473c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610e07565b1115610fa65773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610f9d6040518060400160405280600c81526020017f6574685f726f707374656e33000000000000000000000000000000000000000081525061137a565b60019050611377565b6000610fc573b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610e07565b11156110675773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061105e6040518060400160405280600981526020017f6574685f6b6f76616e000000000000000000000000000000000000000000000081525061137a565b60019050611377565b600061108673146500cfd35b22e4a392fe0adc06de1a1368ed48610e07565b11156111285773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061111f6040518060400160405280600b81526020017f6574685f72696e6b65627900000000000000000000000000000000000000000081525061137a565b60019050611377565b600061114773a2998efd205fb9d4b4963afb70778d6354ad3a41610e07565b11156111e95773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506111e06040518060400160405280600a81526020017f6574685f676f65726c690000000000000000000000000000000000000000000081525061137a565b60019050611377565b6000611208736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610e07565b111561126c57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611377565b600061128b7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610e07565b11156112ef577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611377565b600061130e7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610e07565b1115611372577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611377565b600090505b90565b8060029080519060200190611390929190611394565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106113d557805160ff1916838001178555611403565b82800160010185558215611403579182015b828111156114025782518255916020019190600101906113e7565b5b5090506114109190611414565b5090565b61143691905b8082111561143257600081600090555060010161141a565b5090565b9056fe50726f7661626c65207175657279207761732073656e742c2077616974696e6720666f7220616e737765722e2e2e786d6c2868747470733a2f2f7777772e6675656c65636f6e6f6d792e676f762f77732f726573742f6675656c707269636573292e6675656c5072696365732e726567756c6172a165627a7a7230582041bbd559f75350b3ed2c96ef30829f4eee3611fa1c8d012336f02a70a307ccd1002950726f7661626c65207175657279207761732073656e742c2077616974696e6720666f7220616e737765722e2e2e786d6c2868747470733a2f2f7777772e6675656c65636f6e6f6d792e676f762f77732f726573742f6675656c707269636573292e6675656c5072696365732e726567756c6172",
  "deployedBytecode": "0x60806040526004361061004a5760003560e01c806327dc297e1461004f57806338bbfa5014610121578063a2e620451461028a578063a37ac1e814610294578063be46e4251461029e575b600080fd5b34801561005b57600080fd5b5061011f6004803603604081101561007257600080fd5b81019080803590602001909291908035906020019064010000000081111561009957600080fd5b8201836020820111156100ab57600080fd5b803590602001918460018302840111640100000000831117156100cd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506102c9565b005b34801561012d57600080fd5b506102886004803603606081101561014457600080fd5b81019080803590602001909291908035906020019064010000000081111561016b57600080fd5b82018360208201111561017d57600080fd5b8035906020019184600183028401116401000000008311171561019f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561020257600080fd5b82018360208201111561021457600080fd5b8035906020019184600183028401116401000000008311171561023657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506103b9565b005b6102926103dc565b005b61029c610481565b005b3480156102aa57600080fd5b506102b361048b565b6040518082815260200191505060405180910390f35b6102d1610491565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461030857600080fd5b7f287a7e574923995170e64f00e73f071c03b592d2f2cd69b0d7b706fb3b1699c6816040518080602001828103825283818151815260200191508051906020019080838360005b8381101561036a57808201518184015260208101905061034f565b50505050905090810190601f1680156103975780820380516001836020036101000a031916815260200191505b509250505060405180910390a16103af8160026107ae565b6005819055505050565b6000801b600360008060001b815260200190815260200160002081905550505050565b7fc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c4738960405180806020018281038252602e81526020018061143a602e913960400191505060405180910390a161047e6040518060400160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250604051806080016040528060468152602001611468604691396108c1565b50565b6000600581905550565b60055481565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061051957506000610517600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610e07565b145b1561052a576105286000610e12565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561059457600080fd5b505af11580156105a8573d6000803e3d6000fd5b505050506040513d60208110156105be57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461070757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561068c57600080fd5b505af11580156106a0573d6000803e3d6000fd5b505050506040513d60208110156106b657600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561076e57600080fd5b505afa158015610782573d6000803e3d6000fd5b505050506040513d602081101561079857600080fd5b8101908080519060200190929190505050905090565b600060608390506000809050600080905060008090505b83518110156108a25760308482815181106107dc57fe5b602001015160f81c60f81b60f81c60ff16101580156108185750603984828151811061080457fe5b602001015160f81c60f81b60f81c60ff1611155b1561086a57811561083b576000861415610831576108a2565b8580600190039650505b600a83029250603084828151811061084f57fe5b602001015160f81c60f81b60f81c60ff160383019250610895565b602e84828151811061087857fe5b602001015160f81c60f81b60f81c60ff16141561089457600191505b5b80806001019150506107c5565b5060008511156108b55784600a0a820291505b81935050505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061094957506000610947600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610e07565b145b1561095a576109586000610e12565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156109c457600080fd5b505af11580156109d8573d6000803e3d6000fd5b505050506040513d60208110156109ee57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b3757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610abc57600080fd5b505af1158015610ad0573d6000803e3d6000fd5b505050506040513d6020811015610ae657600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610bc6578082015181840152602081019050610bab565b50505050905090810190601f168015610bf35780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610c1257600080fd5b505af1158015610c26573d6000803e3d6000fd5b505050506040513d6020811015610c3c57600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a764000001811115610c72576000801b915050610e01565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff1660e01b8152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610d0d578082015181840152602081019050610cf2565b50505050905090810190601f168015610d3a5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610d73578082015181840152602081019050610d58565b50505050905090810190601f168015610da05780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b158015610dc157600080fd5b505af1158015610dd5573d6000803e3d6000fd5b50505050506040513d6020811015610dec57600080fd5b81019080805190602001909291905050509150505b92915050565b6000813b9050919050565b6000610e1c610e23565b9050919050565b600080610e43731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610e07565b1115610ee557731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610edc6040518060400160405280600b81526020017f6574685f6d61696e6e657400000000000000000000000000000000000000000081525061137a565b60019050611377565b6000610f0473c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610e07565b1115610fa65773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610f9d6040518060400160405280600c81526020017f6574685f726f707374656e33000000000000000000000000000000000000000081525061137a565b60019050611377565b6000610fc573b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610e07565b11156110675773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061105e6040518060400160405280600981526020017f6574685f6b6f76616e000000000000000000000000000000000000000000000081525061137a565b60019050611377565b600061108673146500cfd35b22e4a392fe0adc06de1a1368ed48610e07565b11156111285773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061111f6040518060400160405280600b81526020017f6574685f72696e6b65627900000000000000000000000000000000000000000081525061137a565b60019050611377565b600061114773a2998efd205fb9d4b4963afb70778d6354ad3a41610e07565b11156111e95773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506111e06040518060400160405280600a81526020017f6574685f676f65726c690000000000000000000000000000000000000000000081525061137a565b60019050611377565b6000611208736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610e07565b111561126c57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611377565b600061128b7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610e07565b11156112ef577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611377565b600061130e7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610e07565b1115611372577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611377565b600090505b90565b8060029080519060200190611390929190611394565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106113d557805160ff1916838001178555611403565b82800160010185558215611403579182015b828111156114025782518255916020019190600101906113e7565b5b5090506114109190611414565b5090565b61143691905b8082111561143257600081600090555060010161141a565b5090565b9056fe50726f7661626c65207175657279207761732073656e742c2077616974696e6720666f7220616e737765722e2e2e786d6c2868747470733a2f2f7777772e6675656c65636f6e6f6d792e676f762f77732f726573742f6675656c707269636573292e6675656c5072696365732e726567756c6172a165627a7a7230582041bbd559f75350b3ed2c96ef30829f4eee3611fa1c8d012336f02a70a307ccd10029",
  "sourceMap": "63:794:0:-;;;234:46;8:9:-1;5:2;;;30:1;27;20:12;5:2;234:46:0;265:8;:6;;;:8;;:::i;:::-;63:794;;550:229;598:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;677:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;;;:95;;:::i;:::-;;550:229::o;16005:353:3:-;16106:11;11886:1;11862:26;;11870:3;;;;;;;;;;;11862:26;;;11861:64;;;;11923:1;11894:25;11914:3;;;;;;;;;;;11894:11;;;:25;;:::i;:::-;:30;11861:64;11857:130;;;11941:35;11518:1;11941:19;;;:35;;:::i;:::-;;11857:130;12021:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12021:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12021:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12021:16:3;;;;;;;;;;;;;;;;12000:37;;12008:8;;;;;;;;;;;12000:37;;;11996:106;;12074:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12074:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12074:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12074:16:3;;;;;;;;;;;;;;;;12053:8;;:38;;;;;;;;;;;;;;;;;;11996:106;16129:10;16142:8;;;;;;;;;;;:17;;;16160:11;16142:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16142:30:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16142:30:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16142:30:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16142:30:3;;;;;;;;;;;;;;;;16129:43;;16218:6;16204:11;:20;16194:7;:30;16186:5;:38;16182:104;;;16247:1;16240:8;;;;;;;16182:104;16302:8;;;;;;;;;;;:14;;;16323:5;16330:1;16333:11;16346:4;16302:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16302:49:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16302:49:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16302:49:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16302:49:3;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16302:49:3;;;;;;;;;;;;;;;;16295:56;;;12111:1;16005:353;;;;:::o;37338:147::-;37397:10;37463:5;37451:18;37442:27;;37428:51;;;:::o;12594:205::-;12659:16;12771:21;:19;;;:21;;:::i;:::-;12764:28;;12594:205;;;:::o;13073:2031::-;13122:16;13212:1;13154:55;13166:42;13154:11;;;:55;;:::i;:::-;:59;13150:246;;;13265:42;13239:3;;:69;;;;;;;;;;;;;;;;;;13322:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;13381:4;13374:11;;;;13150:246;13467:1;13409:55;13421:42;13409:11;;;:55;;:::i;:::-;:59;13405:255;;;13528:42;13502:3;;:69;;;;;;;;;;;;;;;;;;13585:39;;;;;;;;;;;;;;;;;;:23;;;:39;;:::i;:::-;13645:4;13638:11;;;;13405:255;13731:1;13673:55;13685:42;13673:11;;;:55;;:::i;:::-;:59;13669:250;;;13790:42;13764:3;;:69;;;;;;;;;;;;;;;;;;13847:36;;;;;;;;;;;;;;;;;;:23;;;:36;;:::i;:::-;13904:4;13897:11;;;;13669:250;13990:1;13932:55;13944:42;13932:11;;;:55;;:::i;:::-;:59;13928:254;;;14051:42;14025:3;;:69;;;;;;;;;;;;;;;;;;14108:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;14167:4;14160:11;;;;13928:254;14253:1;14195:55;14207:42;14195:11;;;:55;;:::i;:::-;:59;14191:252;;;14313:42;14287:3;;:69;;;;;;;;;;;;;;;;;;14370:37;;;;;;;;;;;;;;;;;;:23;;;:37;;:::i;:::-;14428:4;14421:11;;;;14191:252;14514:1;14456:55;14468:42;14456:11;;;:55;;:::i;:::-;:59;14452:202;;;14575:42;14549:3;;:69;;;;;;;;;;;;;;;;;;14639:4;14632:11;;;;14452:202;14725:1;14667:55;14679:42;14667:11;;;:55;;:::i;:::-;:59;14663:201;;;14785:42;14759:3;;:69;;;;;;;;;;;;;;;;;;14849:4;14842:11;;;;14663:201;14935:1;14877:55;14889:42;14877:11;;;:55;;:::i;:::-;:59;14873:203;;;14997:42;14971:3;;:69;;;;;;;;;;;;;;;;;;15061:4;15054:11;;;;14873:203;15092:5;15085:12;;13073:2031;;:::o;12805:125::-;12910:13;12886:21;:37;;;;;;;;;;;;:::i;:::-;;12805:125;:::o;63:794:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "63:794:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;290:250;;8:9:-1;5:2;;;30:1;27;20:12;5:2;290:250:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;290:250:0;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;290:250:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;290:250:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;290:250:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;290:250:0;;;;;;;;;;;;;;;:::i;:::-;;15470:178:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15470:178:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15470:178:3;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15470:178:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15470:178:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15470:178:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15470:178:3;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15470:178:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15470:178:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15470:178:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15470:178:3;;;;;;;;;;;;;;;:::i;:::-;;550:229:0;;;:::i;:::-;;785:70;;;:::i;:::-;;104:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;104:23:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;290:250;387:20;:18;:20::i;:::-;373:34;;:10;:34;;;365:43;;;;;;466:23;481:7;466:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;466:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;513:20;522:7;531:1;513:8;:20::i;:::-;499:11;:34;;;;290:250;;:::o;15470:178:3:-;15639:1;15631:10;;15594:22;:34;15625:1;15617:10;;15594:34;;;;;;;;;;;:47;;;;15470:178;;;:::o;550:229:0:-;598:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;677:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:95::i;:::-;;550:229::o;785:70::-;847:1;833:11;:15;;;;785:70::o;104:23::-;;;;:::o;37202:130:3:-;37262:24;11886:1;11862:26;;11870:3;;;;;;;;;;;11862:26;;;11861:64;;;;11923:1;11894:25;11914:3;;;;;;;;;;;11894:11;:25::i;:::-;:30;11861:64;11857:130;;;11941:35;11518:1;11941:19;:35::i;:::-;;11857:130;12021:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12021:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12021:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12021:16:3;;;;;;;;;;;;;;;;12000:37;;12008:8;;;;;;;;;;;12000:37;;;11996:106;;12074:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12074:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12074:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12074:16:3;;;;;;;;;;;;;;;;12053:8;;:38;;;;;;;;;;;;;;;;;;11996:106;37305:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37305:20:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37305:20:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;37305:20:3;;;;;;;;;;;;;;;;37298:27;;37202:130;:::o;43022:796::-;43090:15;43117:20;43146:2;43117:32;;43159:9;43171:1;43159:13;;43182;43198:5;43182:21;;43218:6;43227:1;43218:10;;43213:516;43234:7;:14;43230:1;:18;43213:516;;;43301:2;43285:7;43293:1;43285:10;;;;;;;;;;;;;;;;43279:17;;43274:23;;:29;;43273:66;;;;;43336:2;43320:7;43328:1;43320:10;;;;;;;;;;;;;;;;43314:17;;43309:23;;:29;;43273:66;43269:450;;;43363:8;43359:175;;;43404:1;43398:2;:7;43394:122;;;43432:5;;43394:122;43490:4;;;;;;;;43359:175;43559:2;43551:10;;;;43613:2;43598:7;43606:1;43598:10;;;;;;;;;;;;;;;;43592:17;;43587:23;;:28;43579:36;;;;43269:450;;;43667:2;43651:7;43659:1;43651:10;;;;;;;;;;;;;;;;43645:17;;43640:23;;:29;43636:83;;;43700:4;43689:15;;43636:83;43269:450;43250:3;;;;;;;43213:516;;;;43747:1;43742:2;:6;43738:53;;;43778:2;43772;:8;43764:16;;;;43738:53;43807:4;43800:11;;;;;43022:796;;;;:::o;16005:353::-;16106:11;11886:1;11862:26;;11870:3;;;;;;;;;;;11862:26;;;11861:64;;;;11923:1;11894:25;11914:3;;;;;;;;;;;11894:11;:25::i;:::-;:30;11861:64;11857:130;;;11941:35;11518:1;11941:19;:35::i;:::-;;11857:130;12021:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12021:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12021:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12021:16:3;;;;;;;;;;;;;;;;12000:37;;12008:8;;;;;;;;;;;12000:37;;;11996:106;;12074:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12074:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12074:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12074:16:3;;;;;;;;;;;;;;;;12053:8;;:38;;;;;;;;;;;;;;;;;;11996:106;16129:10;16142:8;;;;;;;;;;;:17;;;16160:11;16142:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16142:30:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16142:30:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16142:30:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16142:30:3;;;;;;;;;;;;;;;;16129:43;;16218:6;16204:11;:20;16194:7;:30;16186:5;:38;16182:104;;;16247:1;16240:8;;;;;;;16182:104;16302:8;;;;;;;;;;;:14;;;16323:5;16330:1;16333:11;16346:4;16302:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16302:49:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16302:49:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16302:49:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16302:49:3;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16302:49:3;;;;;;;;;;;;;;;;16295:56;;;12111:1;16005:353;;;;:::o;37338:147::-;37397:10;37463:5;37451:18;37442:27;;37428:51;;;:::o;12594:205::-;12659:16;12771:21;:19;:21::i;:::-;12764:28;;12594:205;;;:::o;13073:2031::-;13122:16;13212:1;13154:55;13166:42;13154:11;:55::i;:::-;:59;13150:246;;;13265:42;13239:3;;:69;;;;;;;;;;;;;;;;;;13322:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13381:4;13374:11;;;;13150:246;13467:1;13409:55;13421:42;13409:11;:55::i;:::-;:59;13405:255;;;13528:42;13502:3;;:69;;;;;;;;;;;;;;;;;;13585:39;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;13645:4;13638:11;;;;13405:255;13731:1;13673:55;13685:42;13673:11;:55::i;:::-;:59;13669:250;;;13790:42;13764:3;;:69;;;;;;;;;;;;;;;;;;13847:36;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;13904:4;13897:11;;;;13669:250;13990:1;13932:55;13944:42;13932:11;:55::i;:::-;:59;13928:254;;;14051:42;14025:3;;:69;;;;;;;;;;;;;;;;;;14108:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14167:4;14160:11;;;;13928:254;14253:1;14195:55;14207:42;14195:11;:55::i;:::-;:59;14191:252;;;14313:42;14287:3;;:69;;;;;;;;;;;;;;;;;;14370:37;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;14428:4;14421:11;;;;14191:252;14514:1;14456:55;14468:42;14456:11;:55::i;:::-;:59;14452:202;;;14575:42;14549:3;;:69;;;;;;;;;;;;;;;;;;14639:4;14632:11;;;;14452:202;14725:1;14667:55;14679:42;14667:11;:55::i;:::-;:59;14663:201;;;14785:42;14759:3;;:69;;;;;;;;;;;;;;;;;;14849:4;14842:11;;;;14663:201;14935:1;14877:55;14889:42;14877:11;:55::i;:::-;:59;14873:203;;;14997:42;14971:3;;:69;;;;;;;;;;;;;;;;;;15061:4;15054:11;;;;14873:203;15092:5;15085:12;;13073:2031;;:::o;12805:125::-;12910:13;12886:21;:37;;;;;;;;;;;;:::i;:::-;;12805:125;:::o;63:794:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.4.22 <0.7.0;\n\nimport \"./provableAPI.sol\";\n\ncontract GasPrice is usingProvable {\n    uint public gasPriceUSD;\n    \n    event LogNewGasPrice(string price);\n    event LogNewProvableQuery(string description);\n    \n    constructor() public {\n        update();\n    }\n    \n    function __callback(bytes32 _myid, string memory _result) public {\n        require(msg.sender == provable_cbAddress()); //AHHH why does it need to be a cb address\n        emit LogNewGasPrice(_result);\n        gasPriceUSD = parseInt(_result, 2);\n    }\n    \n    function update() public payable {\n        emit LogNewProvableQuery(\"Provable query was sent, waiting for answer...\");\n        provable_query(\"URL\", \"xml(https://www.fueleconomy.gov/ws/rest/fuelprices).fuelPrices.regular\");\n    }\n\n    function resetToZero() public payable {\n        gasPriceUSD = 0;\n    }\n}",
  "sourcePath": "/Users/wesleypenn/Documents/2019-2020/CIS233/final-project/final-project-contract/contracts/GasPrice.sol",
  "ast": {
    "absolutePath": "/Users/wesleypenn/Documents/2019-2020/CIS233/final-project/final-project-contract/contracts/GasPrice.sol",
    "exportedSymbols": {
      "GasPrice": [
        70
      ]
    },
    "id": 71,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:0"
      },
      {
        "absolutePath": "/Users/wesleypenn/Documents/2019-2020/CIS233/final-project/final-project-contract/contracts/provableAPI.sol",
        "file": "./provableAPI.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 71,
        "sourceUnit": 6686,
        "src": "34:27:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6685,
              "src": "84:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6685",
                "typeString": "contract usingProvable"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "84:13:0"
          }
        ],
        "contractDependencies": [
          6685
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 70,
        "linearizedBaseContracts": [
          70,
          6685
        ],
        "name": "GasPrice",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "gasPriceUSD",
            "nodeType": "VariableDeclaration",
            "scope": 70,
            "src": "104:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "104:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 10,
            "name": "LogNewGasPrice",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "159:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "159:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "158:14:0"
            },
            "src": "138:35:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14,
            "name": "LogNewProvableQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 14,
                  "src": "204:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "204:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "203:20:0"
            },
            "src": "178:46:0"
          },
          {
            "body": {
              "id": 20,
              "nodeType": "Block",
              "src": "255:25:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 17,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "265:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 18,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "265:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19,
                  "nodeType": "ExpressionStatement",
                  "src": "265:8:0"
                }
              ]
            },
            "documentation": null,
            "id": 21,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "245:2:0"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "255:0:0"
            },
            "scope": 70,
            "src": "234:46:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 47,
              "nodeType": "Block",
              "src": "355:185:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 33,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 29,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6700,
                            "src": "373:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 30,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "373:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 31,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4508,
                            "src": "387:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 32,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "387:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "373:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 28,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6703,
                        6704
                      ],
                      "referencedDeclaration": 6703,
                      "src": "365:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "365:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35,
                  "nodeType": "ExpressionStatement",
                  "src": "365:43:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37,
                        "name": "_result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "481:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 36,
                      "name": "LogNewGasPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "466:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "466:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39,
                  "nodeType": "EmitStatement",
                  "src": "461:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 40,
                      "name": "gasPriceUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "499:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 42,
                          "name": "_result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "522:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 43,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "531:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 41,
                        "name": "parseInt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          5341,
                          5458
                        ],
                        "referencedDeclaration": 5458,
                        "src": "513:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (string memory,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "513:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "499:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "499:34:0"
                }
              ]
            },
            "documentation": null,
            "id": 48,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "name": "_myid",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "310:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "310:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "325:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "325:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "309:38:0"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "355:0:0"
            },
            "scope": 70,
            "src": "290:250:0",
            "stateMutability": "nonpayable",
            "superFunction": 1412,
            "visibility": "public"
          },
          {
            "body": {
              "id": 60,
              "nodeType": "Block",
              "src": "583:196:0",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f7661626c65207175657279207761732073656e742c2077616974696e6720666f7220616e737765722e2e2e",
                        "id": 52,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "618:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51360bd3c2c98ca7961cc48f3174e940b032e0610fc331c9dc3b50c7c08b3778",
                          "typeString": "literal_string \"Provable query was sent, waiting for answer...\""
                        },
                        "value": "Provable query was sent, waiting for answer..."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_51360bd3c2c98ca7961cc48f3174e940b032e0610fc331c9dc3b50c7c08b3778",
                          "typeString": "literal_string \"Provable query was sent, waiting for answer...\""
                        }
                      ],
                      "id": 51,
                      "name": "LogNewProvableQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "598:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "598:69:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54,
                  "nodeType": "EmitStatement",
                  "src": "593:74:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "55524c",
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "692:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        "value": "URL"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "786d6c2868747470733a2f2f7777772e6675656c65636f6e6f6d792e676f762f77732f726573742f6675656c707269636573292e6675656c5072696365732e726567756c6172",
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "699:72:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_66ee9cda76648dbe98ef1ff73c7d7954a22efe2a35d12829ceb340f04060448c",
                          "typeString": "literal_string \"xml(https://www.fueleconomy.gov/ws/rest/fuelprices).fuelPrices.regular\""
                        },
                        "value": "xml(https://www.fueleconomy.gov/ws/rest/fuelprices).fuelPrices.regular"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_66ee9cda76648dbe98ef1ff73c7d7954a22efe2a35d12829ceb340f04060448c",
                          "typeString": "literal_string \"xml(https://www.fueleconomy.gov/ws/rest/fuelprices).fuelPrices.regular\""
                        }
                      ],
                      "id": 55,
                      "name": "provable_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1512,
                        1555,
                        1602,
                        1647,
                        1691,
                        1737,
                        1787,
                        1835,
                        1883,
                        1933,
                        1987,
                        2039,
                        2076,
                        2116,
                        2159,
                        2199,
                        2244,
                        2292,
                        2343,
                        2391,
                        2444,
                        2500,
                        2559,
                        2615,
                        2676,
                        2740,
                        2807,
                        2871,
                        2940,
                        3012,
                        3087,
                        3159,
                        3207,
                        3257,
                        3311,
                        3363,
                        3400,
                        3440,
                        3483,
                        3523,
                        3568,
                        3616,
                        3667,
                        3715,
                        3768,
                        3824,
                        3883,
                        3939,
                        4000,
                        4064,
                        4131,
                        4195,
                        4264,
                        4336,
                        4411,
                        4483
                      ],
                      "referencedDeclaration": 1512,
                      "src": "677:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "677:95:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "677:95:0"
                }
              ]
            },
            "documentation": null,
            "id": 61,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "565:2:0"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "583:0:0"
            },
            "scope": 70,
            "src": "550:229:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "823:32:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 64,
                      "name": "gasPriceUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "833:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "847:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "833:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "833:15:0"
                }
              ]
            },
            "documentation": null,
            "id": 69,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resetToZero",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "805:2:0"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "823:0:0"
            },
            "scope": 70,
            "src": "785:70:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 71,
        "src": "63:794:0"
      }
    ],
    "src": "0:857:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/wesleypenn/Documents/2019-2020/CIS233/final-project/final-project-contract/contracts/GasPrice.sol",
    "exportedSymbols": {
      "GasPrice": [
        70
      ]
    },
    "id": 71,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:0"
      },
      {
        "absolutePath": "/Users/wesleypenn/Documents/2019-2020/CIS233/final-project/final-project-contract/contracts/provableAPI.sol",
        "file": "./provableAPI.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 71,
        "sourceUnit": 6686,
        "src": "34:27:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6685,
              "src": "84:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6685",
                "typeString": "contract usingProvable"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "84:13:0"
          }
        ],
        "contractDependencies": [
          6685
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 70,
        "linearizedBaseContracts": [
          70,
          6685
        ],
        "name": "GasPrice",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "gasPriceUSD",
            "nodeType": "VariableDeclaration",
            "scope": 70,
            "src": "104:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "104:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 10,
            "name": "LogNewGasPrice",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "159:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "159:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "158:14:0"
            },
            "src": "138:35:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14,
            "name": "LogNewProvableQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 14,
                  "src": "204:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "204:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "203:20:0"
            },
            "src": "178:46:0"
          },
          {
            "body": {
              "id": 20,
              "nodeType": "Block",
              "src": "255:25:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 17,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "265:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 18,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "265:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19,
                  "nodeType": "ExpressionStatement",
                  "src": "265:8:0"
                }
              ]
            },
            "documentation": null,
            "id": 21,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "245:2:0"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "255:0:0"
            },
            "scope": 70,
            "src": "234:46:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 47,
              "nodeType": "Block",
              "src": "355:185:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 33,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 29,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6700,
                            "src": "373:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 30,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "373:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 31,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4508,
                            "src": "387:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 32,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "387:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "373:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 28,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6703,
                        6704
                      ],
                      "referencedDeclaration": 6703,
                      "src": "365:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "365:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35,
                  "nodeType": "ExpressionStatement",
                  "src": "365:43:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37,
                        "name": "_result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "481:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 36,
                      "name": "LogNewGasPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "466:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "466:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39,
                  "nodeType": "EmitStatement",
                  "src": "461:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 40,
                      "name": "gasPriceUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "499:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 42,
                          "name": "_result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "522:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 43,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "531:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 41,
                        "name": "parseInt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          5341,
                          5458
                        ],
                        "referencedDeclaration": 5458,
                        "src": "513:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (string memory,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "513:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "499:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "499:34:0"
                }
              ]
            },
            "documentation": null,
            "id": 48,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "name": "_myid",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "310:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "310:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "325:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "325:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "309:38:0"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "355:0:0"
            },
            "scope": 70,
            "src": "290:250:0",
            "stateMutability": "nonpayable",
            "superFunction": 1412,
            "visibility": "public"
          },
          {
            "body": {
              "id": 60,
              "nodeType": "Block",
              "src": "583:196:0",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f7661626c65207175657279207761732073656e742c2077616974696e6720666f7220616e737765722e2e2e",
                        "id": 52,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "618:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51360bd3c2c98ca7961cc48f3174e940b032e0610fc331c9dc3b50c7c08b3778",
                          "typeString": "literal_string \"Provable query was sent, waiting for answer...\""
                        },
                        "value": "Provable query was sent, waiting for answer..."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_51360bd3c2c98ca7961cc48f3174e940b032e0610fc331c9dc3b50c7c08b3778",
                          "typeString": "literal_string \"Provable query was sent, waiting for answer...\""
                        }
                      ],
                      "id": 51,
                      "name": "LogNewProvableQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "598:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "598:69:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54,
                  "nodeType": "EmitStatement",
                  "src": "593:74:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "55524c",
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "692:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        "value": "URL"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "786d6c2868747470733a2f2f7777772e6675656c65636f6e6f6d792e676f762f77732f726573742f6675656c707269636573292e6675656c5072696365732e726567756c6172",
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "699:72:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_66ee9cda76648dbe98ef1ff73c7d7954a22efe2a35d12829ceb340f04060448c",
                          "typeString": "literal_string \"xml(https://www.fueleconomy.gov/ws/rest/fuelprices).fuelPrices.regular\""
                        },
                        "value": "xml(https://www.fueleconomy.gov/ws/rest/fuelprices).fuelPrices.regular"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_66ee9cda76648dbe98ef1ff73c7d7954a22efe2a35d12829ceb340f04060448c",
                          "typeString": "literal_string \"xml(https://www.fueleconomy.gov/ws/rest/fuelprices).fuelPrices.regular\""
                        }
                      ],
                      "id": 55,
                      "name": "provable_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1512,
                        1555,
                        1602,
                        1647,
                        1691,
                        1737,
                        1787,
                        1835,
                        1883,
                        1933,
                        1987,
                        2039,
                        2076,
                        2116,
                        2159,
                        2199,
                        2244,
                        2292,
                        2343,
                        2391,
                        2444,
                        2500,
                        2559,
                        2615,
                        2676,
                        2740,
                        2807,
                        2871,
                        2940,
                        3012,
                        3087,
                        3159,
                        3207,
                        3257,
                        3311,
                        3363,
                        3400,
                        3440,
                        3483,
                        3523,
                        3568,
                        3616,
                        3667,
                        3715,
                        3768,
                        3824,
                        3883,
                        3939,
                        4000,
                        4064,
                        4131,
                        4195,
                        4264,
                        4336,
                        4411,
                        4483
                      ],
                      "referencedDeclaration": 1512,
                      "src": "677:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "677:95:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "677:95:0"
                }
              ]
            },
            "documentation": null,
            "id": 61,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "565:2:0"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "583:0:0"
            },
            "scope": 70,
            "src": "550:229:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "823:32:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 64,
                      "name": "gasPriceUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "833:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "847:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "833:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "833:15:0"
                }
              ]
            },
            "documentation": null,
            "id": 69,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resetToZero",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "805:2:0"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "823:0:0"
            },
            "scope": 70,
            "src": "785:70:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 71,
        "src": "63:794:0"
      }
    ],
    "src": "0:857:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x287a7e574923995170e64f00e73f071c03b592d2f2cd69b0d7b706fb3b1699c6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "price",
              "type": "string"
            }
          ],
          "name": "LogNewGasPrice",
          "type": "event",
          "signature": "0x287a7e574923995170e64f00e73f071c03b592d2f2cd69b0d7b706fb3b1699c6"
        },
        "0xc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c47389": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "description",
              "type": "string"
            }
          ],
          "name": "LogNewProvableQuery",
          "type": "event",
          "signature": "0xc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c47389"
        }
      },
      "links": {},
      "address": "0x883F97003e5d9372E2201a00bB4817DaA92dB2c2",
      "transactionHash": "0xe8e2d9e8fd9b01e91a12aac3564a4bbcf7e24edf23297271ff85a0468cd8806d"
    },
    "5777": {
      "events": {
        "0x287a7e574923995170e64f00e73f071c03b592d2f2cd69b0d7b706fb3b1699c6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "price",
              "type": "string"
            }
          ],
          "name": "LogNewGasPrice",
          "type": "event",
          "signature": "0x287a7e574923995170e64f00e73f071c03b592d2f2cd69b0d7b706fb3b1699c6"
        },
        "0xc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c47389": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "description",
              "type": "string"
            }
          ],
          "name": "LogNewProvableQuery",
          "type": "event",
          "signature": "0xc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c47389"
        }
      },
      "links": {},
      "address": "0x8B64F2B8a91bd59FFb1A59ee5fF542F6319395ce",
      "transactionHash": "0xbb7f074378c92c74f94be872005efca11edcba3021194dbaaf4ca4881c7458e1"
    }
  },
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-11-16T04:44:25.104Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}